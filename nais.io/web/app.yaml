apiVersion: "nais.io/v1alpha1"
kind: "Application"
metadata:
  labels:
    team: teamforeldrepenger
  name: sentry
  namespace: default
spec:
  image: navikt/sentry:v20190611 # Required. Docker image
  imagePullPolicy: Always
  port: 9000 # Required. The port number which is exposed by the container and should receive HTTP traffic.
  team: teamforeldrepenger # Required. Set to the team that owns this application.
  liveness: # HTTP endpoint that signals 200 OK when the application is running.
    path: /_health/
    initialDelay: 240 # Need to wait for migrations.
    timeout: 1
    periodSeconds: 30     # How often (in seconds) to perform the probe. Default to 10 seconds
    failureThreshold: 10 # when a Pod starts and the probe fails,
  readiness: # HTTP endpoint that signals 200 OK when it is okay to start routing traffic to the application.
    path: /_health/
    initialDelay: 120 # Need to wait for migrations.
    timeout: 5
  replicas: # Optional. Set min = max to disable autoscaling.
    min: 1 # minimum number of replicas.
    max: 1 # maximum number of replicas.
    cpuThresholdPercentage: 100 # total cpu percentage threshold on deployment, at which point it will increase number of pods if current < max
  resources: # Optional. See: http://kubernetes.io/docs/user-guide/compute-resources/
    limits:
      cpu: 500m # app will have its cpu usage throttled if exceeding this limit
      memory: 1536Mi  # app will be killed if exceeding these limits
    requests: # App is guaranteed the requested resources and  will be scheduled on nodes with at least this amount of resources available
      cpu: 250m
      memory: 1536Mi
  leaderElection: false # Optional. If true, a http endpoint will be available at $ELECTOR_PATH that return the current leader
  # Compare this value with the $HOSTNAME to see if the current instance is the leader
  ingresses: # Optional. List of ingress URLs that will route HTTP traffic to the application.
  - "https://sentry.nais.adeo.no"
  logformat: accesslog # Optional. The format of the logs from the container if the logs should be handled differently than plain text or json
  logtransform: dns_loglevel # Optional. The dfstransformation of the logs, if they should be handled differently than plain text or json
  webproxy: true # Optional. Expose web proxy configuration to the application using the HTTP_PROXY, HTTPS_PROXY and NO_PROXY environment variables.
  secrets: true # Optional. If set to true fetch secrets from Secret Service and inject into the pods. todo link to doc.
  env:
  - name: SENTRY_DB_USER
    value: sentry
  - name: SENTRY_DB_NAME
    value: sentry
  - name: SENTRY_POSTGRES_HOST
    value: tpa-sentry-postgresql-postgresql.tpa.svc.nais.local
  - name: SENTRY_POSTGRES_PORT
    value: "5432"
  - name: SENTRY_REDIS_HOST
    value: sentry-redis.default.svc.nais.local
  - name: SENTRY_REDIS_PORT
    value: "80"
  - name: SENTRY_SERVER_EMAIL
    value: "sentry@sentry.local"
  - name: REQUESTS_CA_BUNDLE
    value: /etc/pki/tls/certs/ca-bundle.crt
  - name: SSL_CERT_FILE
    value: /etc/pki/tls/certs/ca-bundle.crt
  - name: GOOGLE_APPLICATION_CREDENTIALS
    value: /var/run/secrets/nais.io/vault/GOOGLE_APPLICATION_CREDENTIALS
  - name: SENTRY_GCS_BUCKET_NAME
    value: navikt-sentry
